                      | #/* $begin ncopy-ys */
                      | ##################################################################
                      | # ncopy.ys - Copy a src block of len ints to dst.
                      | # Return the number of positive ints (>0) contained in src.
                      | #
                      | # Include your name and ID here.
                      | #
                      | # Describe how and why you modified the baseline code.
                      | #
                      | ##################################################################
                      | # Do not modify this portion
                      | # Function prologue.
  0x000: a05f         | ncopy:	pushl %ebp		# Save old frame pointer
  0x002: 2045         | 	rrmovl %esp,%ebp	# Set up new frame pointer
  0x004: a06f         | 	pushl %esi		# Save callee-save regs
  0x006: a03f         | 	pushl %ebx
  0x008: a07f         | 	pushl %edi
  0x00a: 503508000000 | 	mrmovl 8(%ebp),%ebx	# src
  0x010: 502510000000 | 	mrmovl 16(%ebp),%edx	# len
  0x016: 50150c000000 | 	mrmovl 12(%ebp),%ecx	# dst
                      | 
                      | ##################################################################
                      | # You can modify this portion
                      | 	# Loop header
  0x01c: 6300         | 	xorl %eax, %eax		# count = 0;
  0x01e: 2027         | 	rrmovl %edx, %edi
  0x020: c0f7fbffffff | 	iaddl $-5, %edi		# len>5?
                      | #	andl %edx, %edx		# len > 0?
                      | #	jg Loop			# for remove mispredict
                      | #	jmp Done
  0x026: 7630000000   | 	jg Loop
  0x02b: 70df000000   | 	jmp Tag
                      | 	
                      | 
  0x030: 506300000000 | Loop:	mrmovl (%ebx), %esi	# read val from src...
  0x036: 2007         | 	rrmovl %eax, %edi
  0x038: 406100000000 | 	rmmovl %esi, (%ecx)	# ...and store it to dst
  0x03e: c0f701000000 | 	iaddl  $1, %edi
  0x044: 6266         | 	andl %esi, %esi		# val <= 0?
  0x046: 2670         | 	cmovg %edi, %eax
                      | 	
  0x048: 506304000000 | 	mrmovl 4(%ebx), %esi	# read val from src...
  0x04e: 2007         | 	rrmovl %eax, %edi
  0x050: 406104000000 | 	rmmovl %esi, 4(%ecx)	# ...and store it to dst
  0x056: c0f701000000 | 	iaddl  $1, %edi
  0x05c: 6266         | 	andl %esi, %esi		# val <= 0?
  0x05e: 2670         | 	cmovg %edi, %eax
                      | 	
  0x060: 506308000000 | 	mrmovl 8(%ebx), %esi	# read val from src...
  0x066: 2007         | 	rrmovl %eax, %edi
  0x068: 406108000000 | 	rmmovl %esi, 8(%ecx)	# ...and store it to dst
  0x06e: c0f701000000 | 	iaddl  $1, %edi
  0x074: 6266         | 	andl %esi, %esi		# val <= 0?
  0x076: 2670         | 	cmovg %edi, %eax
                      | 
  0x078: 50630c000000 | mrmovl 12(%ebx), %esi	# read val from src...
  0x07e: 2007         | 	rrmovl %eax, %edi
  0x080: 40610c000000 | 	rmmovl %esi, 12(%ecx)	# ...and store it to dst
  0x086: c0f701000000 | 	iaddl  $1, %edi
  0x08c: 6266         | 	andl %esi, %esi		# val <= 0?
  0x08e: 2670         | 	cmovg %edi, %eax
                      | 
  0x090: 506310000000 | mrmovl 16(%ebx), %esi	# read val from src...
  0x096: 2007         | 	rrmovl %eax, %edi
  0x098: 406110000000 | 	rmmovl %esi, 16(%ecx)	# ...and store it to dst
  0x09e: c0f701000000 | 	iaddl  $1, %edi
  0x0a4: 6266         | 	andl %esi, %esi		# val <= 0?
  0x0a6: 2670         | 	cmovg %edi, %eax
                      | 
  0x0a8: 506314000000 | mrmovl 20(%ebx), %esi	# read val from src...
  0x0ae: 2007         | 	rrmovl %eax, %edi
  0x0b0: 406114000000 | 	rmmovl %esi, 20(%ecx)	# ...and store it to dst
  0x0b6: c0f701000000 | 	iaddl  $1, %edi
  0x0bc: 6266         | 	andl %esi, %esi		# val <= 0?
  0x0be: 2670         | 	cmovg %edi, %eax
                      | 	
  0x0c0: c0f118000000 | 	iaddl $24, %ecx		# dst++
  0x0c6: c0f318000000 | 	iaddl $24, %ebx		# src++
  0x0cc: c0f2faffffff | 	iaddl $-6, %edx		# len--, and len > 0?
  0x0d2: 2027         | 	rrmovl %edx, %edi
  0x0d4: c0f7fbffffff | 	iaddl $-5, %edi
  0x0da: 7630000000   | 	jg Loop			# if so, goto Loop:
                      | 
  0x0df: 6222         | Tag:	andl %edx, %edx
  0x0e1: 7115010000   | 	jle Done
  0x0e6: 506300000000 | Tag2:	mrmovl (%ebx), %esi	# read val from src...
  0x0ec: 2007         | 	rrmovl %eax, %edi
  0x0ee: 406100000000 | 	rmmovl %esi, (%ecx)	# ...and store it to dst
  0x0f4: c0f701000000 | 	iaddl  $1, %edi
  0x0fa: 6266         | 	andl %esi, %esi		# val <= 0?
  0x0fc: 2670         | 	cmovg %edi, %eax
                      | 	
  0x0fe: c0f104000000 | 	iaddl $4, %ecx		# dst++
  0x104: c0f304000000 | 	iaddl $4, %ebx		# src++
  0x10a: c0f2ffffffff | 	iaddl $-1, %edx		# len--, and len > 0?
  0x110: 76e6000000   | 	jg Tag2			# if so, goto Loop:
                      | 
                      | ##################################################################
                      | # Do not modify the following section of code
                      | # Function epilogue.
  0x115:              | Done:
  0x115: b07f         | 	popl %edi               # Restore callee-save registers
  0x117: b03f         | 	popl %ebx
  0x119: b06f         | 	popl %esi
  0x11b: 2054         | 	rrmovl %ebp, %esp
  0x11d: b05f         | 	popl %ebp
  0x11f: 90           | 	ret
                      | ##################################################################
                      | # Keep the following label at the end of your function
  0x120:              | End:
                      | #/* $end ncopy-ys */
