#Sample linked list
	.pos 0
init:	irmovl Stack, %esp
	irmovl Stack, %ebp
	call Main
	halt
#elements
	.align 4
ele1:
	.long 0x00a
	.long ele2
ele2:
	.long 0x0b0
	.long ele3
ele3:
	.long 0xc00
	.long 0
Main:	pushl %ebp
	rrmovl %esp, %ebp
	irmovl ele1, %edx
	pushl %edx
	call sum_list
	popl %edx
	popl %ebp
	ret
sum_list:
	pushl %ebp
	rrmovl %esp, %ebp
	pushl %ebx #save for use as temporay variable
	pushl %esi #save for use as temporay variable
	pushl %edi #save for use as temporay variable
	irmovl $16, %ebx # ebx=16
	subl %ebx, %esp # subl $16, esp
	irmovl $0, %edi # edi=0
	rmmovl %edi, -4(%ebp) #movl $0 -4(ebp) # set &val=-4(ebp), val=0
	jmp L2
L3:
	mrmovl 8(%ebp), %eax
	mrmovl 0(%eax), %eax	
	mrmovl -4(%ebp), %ebx
	addl %eax, %ebx
	rmmovl %ebx, -4(%ebp) #addl %eax, -4(%ebp)
	mrmovl 8(%ebp), %eax
	mrmovl 4(%eax), %eax
	rmmovl %eax, 8(%ebp)
L2:
	mrmovl 8(%ebp), %edi
	irmovl $0, %esi
	subl %esi, %edi # cmpl $0, 8(%ebp)
	jne L3
	mrmovl -4(%ebp), %eax
	popl %edi
	popl %esi
	popl %ebx
#	irmovl $12, %edx # ebx=16
#	addl %edx, %esp #add $16, esp
	rrmovl %ebp, %esp
	mrmovl (%esp), %ebp
	popl %ebp
	ret
	.pos 0x1000
Stack:	
