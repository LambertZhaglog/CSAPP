#Sample linked list
	.pos 0
init:	irmovl Stack, %esp
	irmovl Stack, %ebp
	call Main
	halt
#elements
	.align 4
ele1:
	.long 0x00a
	.long ele2
ele2:
	.long 0x0b0
	.long ele3
ele3:
	.long 0xc00
	.long 0
Main:	pushl %ebp
	rrmovl %esp, %ebp
	irmovl ele1, %edx
	pushl %edx
	call rsum_list
	popl %edx
	popl %ebp
	ret
rsum_list:
	pushl %ebp
	rrmovl %esp, %ebp
	irmovl $24, %edx # ebx=24
	subl %edx, %esp # subl $24, esp
	mrmovl 8(%ebp),%edx
	andl %edx,%edx #cmpl $0, 8(%ebp)
	jne L6 
	irmovl $0, %eax # edi=0
	jmp L7
L6:
	mrmovl 8(%ebp), %eax
	mrmovl 0(%eax), %eax	
	rmmovl %eax, -12(%ebp)
	mrmovl 8(%ebp), %eax
	mrmovl 4(%eax), %eax
	irmovl $12, %edx
	subl %edx, %esp #subl $12, %esp
	pushl %eax
	call rsum_list
	irmovl $16, %edx
	subl %edx, %esp #andl $16, %esp
	rmmovl %eax, -16(%ebp)
	mrmovl -12(%ebp), %edx
	mrmovl -16(%ebp), %eax
	addl %edx, %eax
L7:
	rrmovl %ebp, %esp
	popl %ebp
	ret
	.pos 0x1000
Stack:	
